1:Set(掌握)
	(1)Set集合的特点:
		无序(存储和取出的顺序不一致),唯一。
	(2)HashSet
		如何保证元素的唯一性呢?
			底层数据结构是哈希表。哈希表依赖于哈希值。
			最终依赖两个方法hashCode()和equals()。
		
		顺序：
			先比较hashCode()值：
				相同：
					继续走equals()方法，根据返回值：
						true:说明元素重复。不添加。
						false:说明元素不重复，添加。
				不同：就直接添加到集合。
		
		案例：
			HashSet存储字符串并遍历。(String类重写了hashCode()和equals())
			HashSet存储自定义对象并遍历。
				存储Person对象，然后去掉重复值。(标准代码)
	(3)TreeSet(理解)
		如何保证元素的唯一性?
			根据返回值是否是0。
		如何保证元素的排序?
			A:自然排序(元素具备比较性)
				让元素所属的类实现Comparable接口
			B:比较器排序(集合具备比较性)
				在创建集合对象的时候，传递Comparator接口的子类对象
		
		案例：
			TreeSet存储字符串并遍历。(String实现了Comparable接口)
			TreeSet存储自定义对象并遍历。
				(标准代码 看懂就行)
				存储学生对象，要求保证唯一和排序(按照学生的姓名长度从长到短)。
	(4)LinkedHashSet：(理解)
		底层数据结构是哈希表和链表。
		由哈希表保证元素唯一。
		由链表保证元素有序。

2:练习
	A:ArrayList存储自定义对象去掉重复。
		contains()方法底层依赖于equals()。
		这个时候，我们要明确一个东西，当你看不懂的时候，就看源码。
	B:用LinkedList模拟栈数据结构。
		自己拥有一个LinkedList，要提供一个栈结构的集合。
	C:ArrayList或者LinkedList存储自定义对象并遍历。
		用windows自带的记事本实现。